<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LeadsCalendar v1.0</title><link>//localhost:1313/docs/developers/</link><description>Recent content on LeadsCalendar v1.0</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="//localhost:1313/docs/developers/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>//localhost:1313/docs/developers/set_up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//localhost:1313/docs/developers/set_up/</guid><description>Getting Started # Welcome to LeadsCalendar! This section will guide you through the initial steps to start integrating LeadsCalendar into your web application.
Prerequisites # Before you begin, make sure you have the following prerequisites in place:
Access to a Google Cloud Console account for setting up Google Calendar API. A PayPal Business account or sandbox credentials for PayPal REST API integration. A Binance account with Binance Pay enabled for Binance Pay API integration.</description></item><item><title>Api</title><link>//localhost:1313/docs/developers/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//localhost:1313/docs/developers/api/</guid><description>API Description for Integration # LeadsCalendar integrates with three main APIs: Google Calendar API, PayPal REST API, and Binance Pay API. Below is a description of each API and its functionalities within the LeadsCalendar application:
1. Google Calendar API: # Description: The Google Calendar API allows LeadsCalendar to interact with users&amp;rsquo; Google Calendar accounts, enabling them to create, update, and delete events programmatically. Functionalities: Event Management: Enables the creation, retrieval, updating, and deletion of events on users&amp;rsquo; Google Calendar.</description></item><item><title>Code Configuration and Samples</title><link>//localhost:1313/docs/developers/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//localhost:1313/docs/developers/architecture/</guid><description>Code Configuration and Samples # Configuration: # Google Calendar API Configuration:
Obtain the Google Cloud project credentials (service account JSON file). Ensure the Google Calendar API is enabled for the project. Set up OAuth consent screen and obtain OAuth client ID and client secret. PayPal REST API Configuration:
Sign up for a PayPal Business account or use sandbox credentials. Generate API credentials (Client ID and Secret) from the PayPal Developer Dashboard.</description></item><item><title>Technologies</title><link>//localhost:1313/docs/developers/technologies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//localhost:1313/docs/developers/technologies/</guid><description>Recommended Technological Stack # Frontend Framework: React.js
React.js is a popular JavaScript library for building user interfaces. Its component-based architecture, virtual DOM, and declarative syntax make it suitable for developing interactive and responsive UIs. Features such as hooks and context API facilitate state management and component reusability. Backend Framework: Node.js with Express.js
Node.js is a runtime environment that allows server-side JavaScript execution, making it ideal for building scalable and high-performance backend services.</description></item><item><title>Testing</title><link>//localhost:1313/docs/developers/testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>//localhost:1313/docs/developers/testing/</guid><description>Testing # Testing is an essential part of ensuring the reliability and functionality of the LeadsCalendar application. Here&amp;rsquo;s a guide on testing the integration with Google Calendar, PayPal, and Binance Pay APIs:
Event Creation Testing:
Create test events using LeadsCalendar and verify that they are successfully added to the user&amp;rsquo;s Google Calendar account. Test different scenarios such as single-day events, multi-day events, recurring events, and events with reminders. Payment Processing Testing:</description></item></channel></rss>